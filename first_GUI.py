#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Nov 02, 2019 12:58:45 PM CET  platform: Windows NT

#TODO: DELETE THIS

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import GUI_support_module
from facade import Facade

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    GUI_support_module.set_Tk_var()
    top = Toplevel1 (root)
    GUI_support_module.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    GUI_support_module.set_Tk_var()
    top = Toplevel1 (w)
    GUI_support_module.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1280x605+1822+485")
        top.minsize(176, 1)
        top.maxsize(2164, 1380)
        top.resizable(1, 1)
        top.title("3D print Error detection")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=1.19, relwidth=1.0)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Home",compound="left",underline="-1",)
        self.TNotebook1_t0.configure(background="#d9d9d9")
        self.TNotebook1_t0.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t0.configure(highlightcolor="black")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Camera",compound="left",underline="-1",)
        self.TNotebook1_t1.configure(background="#d9d9d9")
        self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t1.configure(highlightcolor="black")
        self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(2, text="Timelapse", compound="none", underline="-1"
                ,)
        self.TNotebook1_t2.configure(background="#d9d9d9")
        self.TNotebook1_t2.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t2.configure(highlightcolor="black")
        self.TNotebook1_t3 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t3, padding=3)
        self.TNotebook1.tab(3, text="Config",compound="none",underline="-1",)
        self.TNotebook1_t3.configure(background="#d9d9d9")
        self.TNotebook1_t3.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t3.configure(highlightcolor="black")

        self.Camera_frame = tk.Frame(self.TNotebook1_t1)
        self.Camera_frame.place(relx=0.0, rely=0.0, relheight=689.0, relwidth=1.0)
        self.Camera_frame.configure(relief='groove')
        self.Camera_frame.configure(borderwidth="2")
        self.Camera_frame.configure(relief="groove")
        self.Camera_frame.configure(background="#d9d9d9")

        self.Hue_min = ttk.Scale(self.TNotebook1_t3, from_=0, to=1.0)
        self.Hue_min.place(relx=0.172, rely=250.0, relwidth=0.203, relheight=0.0
                , height=26, bordermode='ignore')
        self.Hue_min.configure(variable=GUI_support_module.huemin)
        self.Hue_min.configure(length="259")
        self.Hue_min.configure(takefocus="")

        self.Hue_max = ttk.Scale(self.TNotebook1_t3, from_=0, to=1.0)
        self.Hue_max.place(relx=0.172, rely=220.0, relwidth=0.204, relheight=0.0
                , height=26, bordermode='ignore')
        self.Hue_max.configure(variable=GUI_support_module.huemax)
        self.Hue_max.configure(value="179")
        self.Hue_max.configure(length="179")
        self.Hue_max.configure(takefocus="")

        self.huelabel = ttk.Label(self.TNotebook1_t3)
        self.huelabel.place(relx=0.188, rely=190.0, height=29, width=170)
        self.huelabel.configure(background="#d9d9d9")
        self.huelabel.configure(foreground="#000000")
        self.huelabel.configure(font="TkDefaultFont")
        self.huelabel.configure(relief="flat")
        self.huelabel.configure(takefocus="0")
        self.huelabel.configure(text='''Hue''')

        self.huelabelmax = ttk.Label(self.TNotebook1_t3)
        self.huelabelmax.place(relx=0.133, rely=220.0, height=24, width=32)
        self.huelabelmax.configure(background="#d9d9d9")
        self.huelabelmax.configure(foreground="#000000")
        self.huelabelmax.configure(font="TkDefaultFont")
        self.huelabelmax.configure(relief="flat")
        self.huelabelmax.configure(takefocus="0")
        self.huelabelmax.configure(text='''Max''')

        self.huelabelmin = ttk.Label(self.TNotebook1_t3)
        self.huelabelmin.place(relx=0.133, rely=250.0, height=24, width=29)
        self.huelabelmin.configure(background="#d9d9d9")
        self.huelabelmin.configure(foreground="#000000")
        self.huelabelmin.configure(font="TkDefaultFont")
        self.huelabelmin.configure(relief="flat")
        self.huelabelmin.configure(takefocus="0")
        self.huelabelmin.configure(text='''Min''')

        self.saturationlabel = ttk.Label(self.TNotebook1_t3)
        self.saturationlabel.place(relx=0.431, rely=170.0, height=24, width=72)
        self.saturationlabel.configure(background="#d9d9d9")
        self.saturationlabel.configure(foreground="#000000")
        self.saturationlabel.configure(font="TkDefaultFont")
        self.saturationlabel.configure(relief="flat")
        self.saturationlabel.configure(text='''Saturation''')

        self.saturationlabelmax = ttk.Label(self.TNotebook1_t3)
        self.saturationlabelmax.place(relx=0.392, rely=220.0, height=24
                , width=32)
        self.saturationlabelmax.configure(background="#d9d9d9")
        self.saturationlabelmax.configure(foreground="#000000")
        self.saturationlabelmax.configure(font="TkDefaultFont")
        self.saturationlabelmax.configure(relief="flat")
        self.saturationlabelmax.configure(text='''Max''')

        self.saturationlabelmin = ttk.Label(self.TNotebook1_t3)
        self.saturationlabelmin.place(relx=0.392, rely=250.0, height=24
                , width=29)
        self.saturationlabelmin.configure(background="#d9d9d9")
        self.saturationlabelmin.configure(foreground="#000000")
        self.saturationlabelmin.configure(font="TkDefaultFont")
        self.saturationlabelmin.configure(relief="flat")
        self.saturationlabelmin.configure(text='''Min''')

        self.saturationmax = ttk.Scale(self.TNotebook1_t3, from_=0, to=255)
        self.saturationmax.place(relx=0.431, rely=220.0, relwidth=0.078
                , relheight=0.0, height=26, bordermode='ignore')
        self.saturationmax.configure(variable=GUI_support_module.saturationmax)
        self.saturationmax.configure(value="255")
        self.saturationmax.configure(takefocus="")

        self.saturationmin = ttk.Scale(self.TNotebook1_t3, from_=0, to=255)
        self.saturationmin.place(relx=0.431, rely=250.0, relwidth=0.078
                , relheight=0.0, height=26, bordermode='ignore')
        self.saturationmin.configure(variable=GUI_support_module.saturationmin)
        self.saturationmin.configure(takefocus="")

        self.valuelabel = ttk.Label(self.TNotebook1_t3)
        self.valuelabel.place(relx=0.682, rely=160.0, height=24, width=41)
        self.valuelabel.configure(background="#d9d9d9")
        self.valuelabel.configure(foreground="#000000")
        self.valuelabel.configure(font="TkDefaultFont")
        self.valuelabel.configure(relief="flat")
        self.valuelabel.configure(text='''Value''')

        self.valuelabelmax = ttk.Label(self.TNotebook1_t3)
        self.valuelabelmax.place(relx=0.65, rely=210.0, height=24, width=32)
        self.valuelabelmax.configure(background="#d9d9d9")
        self.valuelabelmax.configure(foreground="#000000")
        self.valuelabelmax.configure(font="TkDefaultFont")
        self.valuelabelmax.configure(relief="flat")
        self.valuelabelmax.configure(text='''Max''')

        self.valuelabelmin = ttk.Label(self.TNotebook1_t3)
        self.valuelabelmin.place(relx=0.65, rely=240.0, height=24, width=29)
        self.valuelabelmin.configure(background="#d9d9d9")
        self.valuelabelmin.configure(foreground="#000000")
        self.valuelabelmin.configure(font="TkDefaultFont")
        self.valuelabelmin.configure(relief="flat")
        self.valuelabelmin.configure(text='''Min''')

        self.valuemax = ttk.Scale(self.TNotebook1_t3, from_=0, to=255)
        self.valuemax.place(relx=0.69, rely=210.0, relwidth=0.078, relheight=0.0
                , height=26, bordermode='ignore')
        self.valuemax.configure(variable=GUI_support_module.valuemax)
        self.valuemax.configure(value="255")
        self.valuemax.configure(takefocus="")

        self.valuemin = ttk.Scale(self.TNotebook1_t3, from_=0, to=255)
        self.valuemin.place(relx=0.69, rely=240.0, relwidth=0.078, relheight=0.0
                , height=26, bordermode='ignore')
        self.valuemin.configure(variable=GUI_support_module.valuemin)
        self.valuemin.configure(takefocus="")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=GUI_support_module.exit,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")

if __name__ == '__main__':
    vp_start_gui()





